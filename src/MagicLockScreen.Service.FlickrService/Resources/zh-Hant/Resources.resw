<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ChangeLockScreenEvery.Text" xml:space="preserve">
    <value>隔多少時間更新鎖屏或桌面壁紙:</value>
  </data>
  <data name="ChkLockScreen.Content" xml:space="preserve">
    <value>鎖屏背景</value>
  </data>
  <data name="ChkWallpaper.Content" xml:space="preserve">
    <value>桌面壁紙</value>
  </data>
  <data name="HomeButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>主頁</value>
  </data>
  <data name="InfoButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>信息</value>
  </data>
  <data name="InformationTitle" xml:space="preserve">
    <value>信息</value>
  </data>
  <data name="OkButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>確認</value>
  </data>
  <data name="RefreshButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>刷新</value>
  </data>
  <data name="SaveAsButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>另存為</value>
  </data>
  <data name="ServiceChannelInformation" xml:space="preserve">
    <value>&lt;StackPanel xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"&gt;
 &lt;StackPanel.Resources&gt;
  &lt;Style TargetType="TextBlock"&gt;
   &lt;Setter Property="Margin" Value="0,8,0,8"/&gt;
   &lt;Setter Property="TextWrapping" Value="Wrap"/&gt;
  &lt;/Style&gt;
 &lt;/StackPanel.Resources&gt;
 &lt;TextBlock&gt;Flickr 趣圖&lt;/TextBlock&gt;
 &lt;TextBlock&gt;它不僅僅是一個單字，而且還是一項神奇的新「Flickr 功能」。&lt;/TextBlock&gt;
 &lt;TextBlock&gt;Flickr 上有許多元素可讓某個內容變得「有趣」（或無趣）。點擊來源；回應者及回應時間；將其標為最愛的人；它的標籤以及更多不斷變化的內容。Interestingness隨時變更，越來越多的精采內容及故事增加到 Flickr 中。&lt;/TextBlock&gt;
 &lt;TextBlock&gt;我們加入了一些新頁面（並更新了一些現有的頁面）以協助你發掘 Flickr 中最有趣的內容。在開始發掘之前，你可能想要打電話給你的老板以告知他，一個專業培訓課程將要佔用你計畫表的一部分時間，因為我們認為，短時間內你不會打算隨時離開螢幕。漂亮的、神奇的、感人的、攝人的內容 － 發掘並發現 Flickr 最棒的內容。&lt;/TextBlock&gt;
 &lt;HyperlinkButton Content="Flickr" NavigateUri="http://www.flickr.com/"/&gt;
 &lt;HyperlinkButton Content="Flickr 趣圖" NavigateUri="http://www.flickr.com/explore/interesting/"/&gt;
 &lt;HyperlinkButton Content="Flickr 發掘" NavigateUri="http://www.flickr.com/explore/"/&gt;
&lt;/StackPanel&gt;</value>
  </data>
  <data name="ServiceChannelName.Text" xml:space="preserve">
    <value>Flickr© 趣圖</value>
  </data>
  <data name="ServiceChannelSubTitle" xml:space="preserve">
    <value>發掘 Flickr 有趣的圖片</value>
  </data>
  <data name="ServiceChannelTitle" xml:space="preserve">
    <value>Flickr© 趣圖</value>
  </data>
  <data name="SetAppBackgroundButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>設置程式背景</value>
  </data>
  <data name="SetDesktopWallpaper.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>設置桌面壁紙</value>
  </data>
  <data name="SetLockScreenButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>設置鎖屏</value>
  </data>
  <data name="ShareButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>分享</value>
  </data>
  <data name="StartButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>開始</value>
  </data>
  <data name="StopButton.[using:Windows.UI.Xaml.Automation]AutomationProperties.Name" xml:space="preserve">
    <value>終止</value>
  </data>
</root>