<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABCCAYAAACo/NMFAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAX
        EQAAFxEByibzPwAAB59JREFUeF7tnH9oE2cYx1+kJhP3w0mSTqkmkzKRmjSR/UBEkP0zxFFk0D+GOvxr
        G7NbLwUZwjbCZOCmJGlnExURp2zTayplsLGxQe3atNCJNunKQGX+kamlbVKb2JoGsXve801Mmie/7q7C
        294Xvtg09753fJ5773meu6tEkyZNmjRp0qRJk1IdD5u3UrOPmp62TvxtEU8MW+YyDsNnsC+8vpG6fXDt
        OrappoXQyfDLjTkBKOSwOSIFJmQ+zYZqUkNlByDLbCiZ7dMdSvXr52aDuoHZfp0IP7vh30ZqtommUjpx
        1bwVg1zM6ctSsk/fQANQzDQw1MmgvoUGZiZYpeWb+cIgF7N/yPIWHZfs1tdi0MvxbL8+kg4ODQx1tIcs
        zXyDQS5mX9h8gA0lqaAuiQFW4nRw4OelcUnzh80DGOhC9g+b29lQApeWy/MBLpCvQc55x+Uiy9iuF4/y
        StES9octV9lQAgnYhcBSzXQ1zPTq3p0PPt5s2Bh3mo7FBdNEwmmaS5t9zZcqDsCwJdl2o1ZPxz7ordqB
        gVNqAJ+a7dV9HeknK6SDZIoJhl0JwdidDT3bcWE1f0neN2RuwUAXs++aeRcdO/cL0cMqiGEQ5Rrg/5sK
        LrdLB8cUazJtizuNlzHoOW4x8pcv5PQC2XkAkuRZDKQc054i3k0MbGoy+uGzpniz6RIKGzFs62ZD+ZGs
        AIQtsSeXoWdUuQxBkr04IhKddFCg2MfG7XCNv42BLuxqkQ3nSxjkUvYPrd/HhkMy1t/EoJZrOPPPpxOt
        i5Bl8WbjpwD/EQ65iAVjRDog3oQBLmVIxoNsOEn269/GwJbpP9Jn/kgj0QH4LhRumZYOiDdJN9sQyKWc
        TsZUqX7dIAK3qCHh3prsJqvoeDXgU3NZCVVaiqYNTdwVVzeponPc79FZIQgzGGjMtNSc+XP569IBgKCu
        P48Brdg8VkJyA0ANQWhi05Bk7/IDGGzMyT79UTaM3BOMh1CYMsxlJQQQ3RjccgxjE77Q2o10HppIIaGe
        wYBnG7aZHv2NmOiYe02GV+OC8SEGU545rITklKLZhrI05O6vkbrWMoOQebADDdbPOEiZ5rESUhoAaghC
        l4tVMzQIqQG9E3LCFAJ/Djrd1+h2k8JLFhSiQtO5uRJ9yIJBrdS+kOWno79Vr2TTEnqPPxnUt8OKSDyB
        rx9jX5MpwfA5BlCpox+t5u/ZAgZUns0jvr/Wb2DTSqKl5oM+3R4IxGHoGQ6yX5OEYPp1PjxVzGUlhMKU
        Z0jM09BbfJbOC4WUcBqvogAVOi4YWtgu+JGSUhQzDcLRYLVU6RQSwBqZD08dc1gJqR0AuBSVfIUFYC1I
        AKAXGGC74EdKeoE8hy2pb6/UWNnUBQWwFmgFcFgJqVGKpn0yZBHYtEUFDdhZqNt74oJpCHxdzYaMu0pI
        rQD4QxYvm7JiRZxkxZRg3AnN2WmokKYxsGWbt0pIzkta+TZ/w6Yj5NzoSnLhv1fYp4o1KaxaNSWYXFAp
        TaKAS5jPSgiFWpZHIYfsYdPQVngZ6ZjoIp2xHvabHNlsni2b6z37rA7PlzaH95jV4T1ss3sP0t+zTTKi
        gaBvQADU5HzIxc1jJYTDLWh/2HIX6v3DR35/8QU2xeMzPxC9CPDnJHeM7WTfkPp6716ro/Ufm6N1rpDh
        +7s0MJs2edawYZLuN5tskCcqeETJYQDgLC79klbYcgugn/KFLbvTzwIyEsfspDM6nIEvOZoBYdvS2o5B
        L+CHsDr8GzYcyQR3XDCsgdUQxIHnmw3jR8dD5i1wVu+HQDTRVxCp4fMHvtC6Bvpdwcbq3KgJYH9FArFU
        LnxwIJa597MZVgACurjtrRGr3bObTZF+cvYdBny+2ZBFKld3FREn3oTLzUkAncwDn21xrJYOsVo9W1HI
        5djuhQQPuYXumj64dxrPYNBzzOM9oYL64Y6BBCbeAB8A0wQ7mQe6oMcb6BS1tW3Po3DLtNXuFWtq3I+f
        O5QTBO4CcCnaCGf0tHTZoO6MTcDnBPhRPtQKTOdlwsBWYrgcddXVuTLvDwHo7/PAZ8xbIqagMIBKrWIA
        qLODMLqveiV00IOLIwBUGEClDkzspVM7HG1GDKgcw+XolHS8IOgVLFAd3cWCwDbhSBhApb4wLjVYtNHC
        YMo1rITMH4vEmw0NiyMAgWgEhajEbTek90jhrG3EQCpwqq7eXfzdIu4SceekiEKU60B0hM0MAWh1IxCV
        +nq6Mrrz/nMGyAe53bIWgFjmBh00Vb0IQMWGlZV5GQsCsD8nANwl4sB4CwpSrjvGttNp6b0dDJ4ahpX1
        qM7u2Ub3072DVAH4awmnUaRvyUHXzNm7ouqWojfZrGSzw/sJBk8N0wbNBvOzXXEuNQMgwmpisjpaBzF4
        FVm6L+QVrfWeFprQ2dSLTD/eXofCrNS0k6a3pkGyys8lAbuQMKCVOhD9gs0G1Y/nLAo57SUNGxMGtDLf
        JGJEKg3r6ty1APlhGrbV4R2QYANoDXYhKS1Fxcd3P6kgOb4nwXZ4tP+oo2zJCUAgOiA9/RLHM3+2pEmu
        AlE3CjljAE3dARWTGNXObNWVU4oCaBoQCptWSJo0adKkSZMmTZo0aXq6IuR/mlhiK35f4Q8AAAAASUVO
        RK5CYII=
</value>
  </data>
</root>